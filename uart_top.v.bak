module uart_top (
    input wire clk,
    input wire rst,
    input wire rx,                  // External RX pin
    output wire tx                  // External TX pin
);

    wire [7:0] rx_data;
    wire rx_valid;
    wire tx_busy;

    reg [7:0] tx_data;
    reg tx_start;

    // Instantiate receiver
    uart_rx uart_rx_inst (
        .clk(clk),
        .rst(rst),
        .rx(rx),
        .data_out(rx_data),
        .data_valid(rx_valid)
    );

    // Instantiate transmitter
    uart_tx uart_tx_inst (
        .clk(clk),
        .rst(rst),
        .data_in(tx_data),
        .tx_start(tx_start),
        .tx(tx),
        .tx_busy(tx_busy)
    );

    // Example: Loopback â€” send received byte back
    always @(posedge clk or posedge rst) begin
        if (rst) begin
            tx_data <= 8'd0;
            tx_start <= 1'b0;
        end else begin
            // Trigger TX when RX is valid and TX is not busy
            if (rx_valid && !tx_busy) begin
                tx_data <= rx_data;
                tx_start <= 1'b1;
            end else begin
                tx_start <= 1'b0;
            end
        end
    end

endmodule
